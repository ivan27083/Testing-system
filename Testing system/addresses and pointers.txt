№1 Что такое адрес переменной в C++?
1)Значение переменной;
2)Позиция переменной в памяти;*
3)Имя переменной;
4)Тип переменной;

№2 Как получить адрес переменной в C++?
1)Оператор ++;
2)Оператор --;
3)Оператор &;*
4)Оператор ||;

№3 Какой тип данных используется для хранения адресов в C++?
1)int;
2)char;
3)double;
4)указатель;*

№4 Что такое указатель в C++?
1)Переменная, которая хранит адрес другой переменной;*
2)Переменная, которая хранит значение другой переменной;
3)Переменная, которая хранит имя другой переменной;
4)Переменная, которая хранит тип другой переменной;

№5 Как объявить указатель на переменную в C++?
1)int pointer = &variable;
2)int *pointer = variable;*
3)int *pointer = &variable;
4)int pointer = variable;

№6 Как обратиться к значению, на которое указывает указатель в C++?
1)Используя оператор +;
2)Используя оператор -;
3)Используя оператор *;*
4)Используя оператор /;

№7 Что произойдет, если попытаться обратиться к значению по неверному адресу в C++?
1)Код не скомпилируется;
2)Программа завершится с ошибкой;*
3)Программа завершится без ошибок, но значение будет некорректным;
4)Программа будет работать нормально, но результат будет некорректным;

№8 Как можно изменить значение переменной, на которую указывает указатель в C++?
1)Изменить значение самого указателя;
2)Изменить значение переменной, на которую указывает указатель;*
3)Изменить имя переменной, на которую указывает указатель;
4)Изменить тип переменной, на которую указывает указатель;

№9 Можно ли выполнить арифметические операции с указателями в C++?
1)Да;*
2)Нет;
3)Только с определенными типами указателей;
4)Только с определенными типами переменных, на которые указывают указатели;

№10 Какие операции нельзя выполнить с указателями в C++?
1)Сложение;
2)Вычитание;
3)Умножение и деление;*
4)всё перечисленное;

№11 Какая операция используется для получения адреса переменной в C++?
1)Оператор +;
2)Оператор -;
3)Оператор &;*
4)Оператор /;

№12 Какой тип данных используется для объявления указателей на функции в C++?
1)int;
2)char;
3)double;
4)указ;*

№13 Что такое null-указатель в C++?
1)Указатель, который не указывает ни на какой объект;*
2)Указатель, который указывает на первый байт в памяти;
3)Указатель, который указывает на последний байт в памяти;
4)Указатель, который указывает на случайный адрес в памяти;

№14 Как проверить, является ли указатель в C++ null-указателем?
1)Сравнить указатель с 0 или nullptr;*
2)Использовать оператор !;
3)Сравнить указатель с адресом оператора &;
4)Использовать оператор *;

№15 Что произойдет, если попытаться разыменовать null-указатель в C++?
1)Код не скомпилируется;
2)Программа завершится с ошибкой;*
3)Программа завершится без ошибок, но значение будет некорректным;
4)Программа будет работать нормально, но результат будет некорректным;

№16 Как создать массив указателей на переменные в C++?
1)int pointers[5] = { &var1, &var2, &var3, &var4, &var5 };
2)int *pointers[5] = { &var1, &var2, &var3, &var4, &var5 };*
3)int pointers[5] = { var1, var2, var3, var4, var5 };
4)int *pointers[5] = { var1, var2, var3, var4, var5 };

№17 Что такое указатель на указатель в C++?
1)Указатель, который хранит значение другого указателя;*
2)Указатель, который хранит значение другой переменной;
3)Указатель, который хранит адрес другого указателя;
4)Указатель, который хранит тип другого указателя;

№18 Как объявить указатель на указатель в C++?
1)int **pointer;*
2)int *pointer = &var; int **pointer2 = &pointer;
3)int *pointer; int **pointer2 = &pointer;
4)int **pointer = &var;

№19 Что такое ссылка на переменную в C++?
1)Переменная, которая хранит адрес другой переменной;
2)Переменная, которая хранит значение другой переменной;*
3)Переменная, которая хранит имя другой переменной;
4)Переменная, которая хранит тип другой переменной;

№20 Как объявить ссылку на переменную в C++?
1)int reference = &variable;
2)int *reference = variable;
3)int &reference = variable;*
4)нет верного варианта;

№21 Как обратиться к значению переменной, на которую ссылается ссылка в C++?
1)Используя оператор +;
2)Используя оператор -;
3)Используя оператор *;*
4)Используя оператор /;

№22 Что произойдет при попытке изменить значение ссылки на константную переменную в C++?
1)Код не скомпилируется;
2)Программа завершится с ошибкой;*
3)Значение переменной изменится;
4)Значение переменной не изменится;

№23 Что такое константный указатель в C++?
1)Указатель, который указывает на константный объект;*
2)Указатель, который нельзя изменять;
3)Указатель, который всегда указывает на первый байт в памяти;
4)Указатель, который всегда указывает на последний байт в памяти;

№24 Как объявить константный указатель в C++?
1)int const *pointer;
2)const int *pointer;
3)int * const pointer;
4)const int * const pointer;*

№25 Что такое указатель на константный объект в C++?
1)Указатель, который нельзя изменять;
2)Указатель, который указывает на константный объект;*
3)Указатель, который всегда указывает на первый байт в памяти;
3)Указатель, который всегда указывает на последний байт в памяти;

№26 Как объявить указатель на константный объект в C++?
1)int const *pointer;
2)const int *pointer;*
3)int * const pointer;
4)const int * const pointer;

№27 Что такое константная ссылка в C++?
1)Ссылка, которая указывает на константный объект;*
2)Ссылка, которую нельзя изменять;
3)Ссылка, которая всегда указывает на первый байт в памяти;
4)Ссылка, которая всегда указывает на последний байт в памяти;

№28 Как объявить константную ссылку в C++?
1)int &const reference = variable;
2)const int &reference = variable;*
3)оба варианта верны;
4)нет верных;

№29 Можно ли изменить значение переменной через константный указатель в C++?
1)Да;
2)Нет;*
3)Только если использовать ключевое слово const;
4)Только если использовать ключевое слово volatile;

№30 Можно ли изменить значение переменной через указатель на константный объект в C++?
1)Да;*
2)Нет;
3)Только если использовать ключевое слово const;
4)Только если использовать ключевое слово volatile;