№1 Что такое рекурсия в программировании?
1)Это процесс, при котором функция вызывает сама себя;*
2)Это процесс, при котором функция вызывает другую функцию;
3)Это процесс, при котором функция использует циклы для повторения операций;
4)Это процесс, при котором функция использует условные операторы для выполнения разных действий;

№2 Какой результат будет выведен на экран при вызове функции factorial(5), если определение функции выглядит следующим образом: int factorial(int n) { if (n == 0) { return 1;} else { return n * factorial(n-1);}}
1)0;
2)1;
3)5;
4)120;*

№3 Что такое базовый случай в рекурсивной функции?
1)Это случай, при котором функция вызывает сама себя
2)Это случай, при котором функция завершает свою работу без вызова самой себя;*
3)Это случай, при котором функция использует циклы для повторения операций;
4)Это случай, при котором функция использует условные операторы для выполнения разных действий;

№4 Как называется функция, которая вызывает сама себя?
1)Рекурсивная функция;*
2)Итерационная функция;
3)Циклическая функция;
4)Условная функция;

№5 Что такое стек вызовов в рекурсии?
1)Это структура данных, которая используется для хранения результатов выполнения функций;
2)Это структура данных, которая используется для хранения локальных переменных в функциях;
3)Это структура данных, которая используется для хранения адресов возврата при вызове функций;*
4)Это структура данных, которая используется для хранения условных операторов в функциях;

№6 Какое условие должно быть выполнено для корректной работы рекурсивной функции?
1)Функция должна вызывать сама себя только один раз;
2)Функция должна иметь много базовых случаев;
3)Функция должна иметь случай, при котором она завершает свою работу без вызова самой себя;*
4)Функция должна иметь случай, при котором она бесконечно вызывает сама себя;

№7 Что такое хвостовая рекурсия?
1)Это рекурсия, при которой функция вызывает саму себя в конце своего тела;*
2)Это рекурсия, при которой функция вызывает саму себя в начале своего тела;
3)Это рекурсия, при которой функция вызывает другую функцию;
4)Это рекурсия, при которой функция не вызывает саму себя;

№8 Что такое базовый случай в рекурсии?
1)Это случай, когда рекурсия начинается;
2)Это случай, когда рекурсия завершается;*
3)Это случай, когда функция вызывает саму себя;
4)Это случай, когда функция вызывает другую функцию;

№9 Что такое бесконечная рекурсия?
1)Это рекурсия, которая вызывает другую функцию бесконечное количество раз;
2)Это рекурсия, которая не имеет базового случая и продолжает вызывать саму себя бесконечно;*
3)Это рекурсия, которая вызывает саму себя только один раз;
4)Это рекурсия, которая завершается без вызова других функций;

№10 Какой будет результат выполнения функции factorial(5), если она реализована следующим образом? int factorial(int n) { return n * factorial(n-1);}
1)5;
2)20;
3)120;
4)Ошибка компиляции;*

№11 Что такое стек вызовов (call stack) в рекурсии?
1)Это структура данных, в которой хранятся все вызовы функции в порядке их выполнения;
2)Это структура данных, в которой хранятся все переменные функции;*
3)Это структура данных, в которой хранятся все результаты функции;
4)Это структура данных, в которой хранятся все значения, возвращаемые функцией;

№12 Какой будет результат выполнения функции fib(6), если она реализована следующим образом? int fib(int n) { if (n == 0) { return 0;} else if (n == 1) { return 1;} else { return fib(n-1) + fib(n-2);}}
1)5;
2)8;*
3)13;
4)21;

№13 Какой будет результат выполнения функции power(2, 3), если она реализована следующим образом? int power(int base, int exponent) { if (exponent == 0) { return 1;} else { return base * power(base, exponent-1);}}
1)2;
2)4;
3)8;*
4)16;

№14 Какая из следующих функций является примером хвостовой рекурсии?
1)int factorial(int n) { return n * factorial(n-1); };
2)int fibonacci(int n) { return fibonacci(n-1) + fibonacci(n-2); };
3)int gcd(int a, int b) { if (b == 0) { return a; } else { return gcd(b, a%b); } };
5)int sum(int arr[], int n) { if (n == 0) { return 0; } else { return arr[n-1] + sum(arr, n-1); } };*

№15 Что такое переполнение стека (stack overflow) в рекурсии?
1)Это ошибка компиляции, возникающая при слишком большом количестве рекурсивных вызовов;
2)Это ошибка времени выполнения, возникающая при попытке выделить больше памяти, чем доступно;
3)Это ошибка времени выполнения, возникающая при переполнении стека вызовов функций;*
4)Это ошибка времени выполнения, возникающая при использовании неинициализированных переменных;

№16 Какой будет результат выполнения функции sum(4), если она реализована следующим образом? int sum(int n) { if (n == 0) { return 0;} else { return n + sum(n-1);}}
1)4;
2)10;*
3)14;
4)Ошибка компиляции;

№17 Какой будет результат выполнения функции gcd(24, 36), если она реализована следующим образом? int gcd(int a, int b) { if (b == 0) { return a;} else { return gcd(b, a % b);}}
1)12;*
2)24;
3)36;
4)Ошибка компиляции;

№18 Какой будет результат выполнения функции power(2, 5), если она реализована следующим образом? int power(int x, int n) { if (n == 0) { return 1;} else { return x * power(x, n-1);}}
1)2;
2)5;
3)10;
4)32;*

№19 Что такое рекурсивное дерево (recursive tree)?
1)Это дерево, которое содержит только корень и не имеет ветвей;
2)Это дерево, которое содержит только листья и не имеет ветвей;
3)Это дерево, которое содержит только один узел и его потомков;
4)Это дерево, которое может содержать любое количество узлов и их потомков;*

№20 Какой будет результат выполнения функции countDigits(12345), если она реализована следующим образом? int countDigits(int n) { if (n == 0) { return 0;} else { return 1 + countDigits(n / 10);}}
1)1;
2)5;*
3)10;
4)Ошибка компиляции;

№21 Что такое базовый случай (base case) в рекурсии?
1)Это случай, когда функция рекурсивно вызывает саму себя;
2)Это случай, когда функция не вызывает саму себя и сразу возвращает результат;*
3)Это случай, когда функция вызывает себя бесконечное число раз;
4)Это случай, когда функция вызывает себя только один раз;

№22 Что такое глубина рекурсии (recursion depth)?
1)Это количество базовых случаев в рекурсивной функции;
2)Это максимальное количество вызовов рекурсивной функции, которое может быть выполнено до того, как будет достигнуто ограничение на глубину рекурсии в данном языке программирования;*
3)Это максимальное количество переменных, которые могут быть определены внутри рекурсивной функции;
4)Это количество вызовов рекурсивной функции, которые были выполнены до достижения базового случая;

№23 Какой тип функции может быть рекурсивным?
1)Только void;
2)Только int;*
3)Любой тип;
4)Только float;

№24 Что такое анонимная рекурсия?
1)Это рекурсия, при которой функция не вызывает саму себя;
2)Это рекурсия, при которой функция вызывает другую функцию;
3)Это рекурсия, при которой имя функции не задано явно;*
4)Это рекурсия, при которой функция вызывает саму себя в начале своего тела;

№25 Что такое память стека (stack memory) в контексте рекурсии?
1) Это область памяти, используемая для хранения локальных переменных функции;*
2) Это область памяти, используемая для хранения результатов функций;
3) Это область памяти, используемая для хранения глобальных переменных;
4) Это область памяти, используемая для хранения динамически выделенной памяти;

№26 Какой принцип лежит в основе рекурсии?
1)Принцип разделения и властвования;
2)Принцип обратной связи;
3)Принцип самоподобия;*
4)Принцип единства решения;

№27 Какой будет результат выполнения функции sum(4), если она реализована следующим образом? int sum(int n) { if (n == 0) { return 0;} else { return n + sum(n-1);}}
1)4;
2)10;*
3)14;
4)Ошибка компиляции;

№28 Какой будет результат выполнения функции fib(6), если она реализована следующим образом? int fib(int n) { if (n == 0) { return 0;} else if (n == 1) { return 1;} else { return fib(n-1) + fib(n-2);}}
1)5;
2)8;*
3)13;
4)21;

№29 Что такое базовый случай в рекурсивной функции?
1)Это случай, при котором функция вызывает сама себя
2)Это случай, при котором функция завершает свою работу без вызова самой себя;*
3)Это случай, при котором функция использует циклы для повторения операций
4)Это случай, при котором функция использует условные операторы для выполнения разных действий

№30  Как называется функция, которая вызывает сама себя?
1)Рекурсивная функция;*
2)Итерационная функция;
3)Циклическая функция;
4)Условная функция;
